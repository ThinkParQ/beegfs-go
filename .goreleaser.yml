version: 2
builds:
  - id: beegfs_tools
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X github.com/thinkparq/beegfs-go/ctl/internal/cmd.Version={{ .Version }}
      - -X github.com/thinkparq/beegfs-go/ctl/internal/cmd.BinaryName=beegfs
      - -X github.com/thinkparq/beegfs-go/ctl/internal/cmd.Commit={{ .Commit }}
      - -X github.com/thinkparq/beegfs-go/ctl/internal/cmd.BuildTime={{ .Date }}
    binary: beegfs
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    main: ctl/cmd/beegfs/main.go
    hooks:
      post:
        # Note post hooks run for each binary so we actually generate the script twice and just
        # overwrite it in place. It should always be the same for arm64 and amd64 so this is fine.
        # However when adding future post hooks ensure this is what you want.
        - sh -c "go run ctl/cmd/beegfs/main.go completion bash > ./dist/beegfs_bashcomp"
  - id: beegfs_remote
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.binaryName=beegfs-remote
      - -X main.commit={{ .Commit }}
      - -X main.buildTime={{ .Date }}
    binary: beegfs-remote
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    main: rst/remote/cmd/beegfs-remote/main.go
  - id: beegfs_sync
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.binaryName=beegfs-sync
      - -X main.commit={{ .Commit }}
      - -X main.buildTime={{ .Date }}
    binary: beegfs-sync
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    main: rst/sync/cmd/beegfs-sync/main.go
  - id: beegfs_watch
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.binaryName=beegfs-watch
      - -X main.commit={{ .Commit }}
      - -X main.buildTime={{ .Date }}
    binary: beegfs-watch
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    main: watch/cmd/beegfs-watch/main.go

nfpms:
  - id: beegfs_tools
    ids:
      - beegfs_tools
    package_name: beegfs-tools
    file_name_template: "beegfs-tools-{{ .Version }}-{{ .Os }}.{{ .Arch }}"
    vendor: "ThinkparQ GmbH"
    homepage: https://www.beegfs.io
    maintainer: BeeGFS Maintainers <packages@beegfs.com>
    description: A collection of tools for managing BeeGFS.
    license: BeeGFS EULA
    formats:
      - rpm
      - deb
    epoch: "20"
    scripts:
      preinstall: ./ctl/build/preinstall.sh
      postinstall: ./ctl/build/postinstall.sh
    # Note binaries built above are added to bindir automatically. We use preinstall/postinstall
    # scripts to customize ownership and permissions including adding the setgid bit to the beegfs
    # binary so it runs with group permissions needed to access config files under /etc/beegfs.
    bindir: "/opt/beegfs/sbin/"
    contents:
      - src: /opt/beegfs/sbin/beegfs
        dst: /usr/sbin/beegfs
        type: "symlink"
      - src: ./dist/beegfs_bashcomp
        dst: /etc/bash_completion.d/beegfs
      - src: ctl/NOTICE.md
        dst: /usr/share/doc/beegfs-tools/NOTICE.md
      - src: LICENSE.md
        dst: /usr/share/doc/beegfs-tools/LICENSE.md
  - id: beegfs_remote
    ids:
      - beegfs_remote
    package_name: beegfs-remote
    file_name_template: "beegfs-remote-{{ .Version }}-{{ .Os }}.{{ .Arch }}"
    vendor: "ThinkparQ GmbH"
    homepage: https://www.beegfs.io
    maintainer: BeeGFS Maintainers <packages@beegfs.com>
    description: BeeGFS Remote (Remote Storage Targets Coordinator)
    license: BeeGFS EULA
    formats:
      - rpm
      - deb
    epoch: "20"
    bindir: /opt/beegfs/sbin/
    contents:
      - src: /opt/beegfs/sbin/beegfs-remote
        dst: /usr/sbin/beegfs-remote
        type: "symlink"
      - src: rst/remote/build/beegfs-remote.service
        dst: /usr/lib/systemd/system/beegfs-remote.service
        type: config
      - src: rst/remote/build/beegfs-remote.toml
        dst: /etc/beegfs/beegfs-remote.toml
        type: config
      - src: rst/remote/NOTICE.md
        dst: /usr/share/doc/beegfs-remote/NOTICE.md
      - src: LICENSE.md
        dst: /usr/share/doc/beegfs-remote/LICENSE.md
  - id: beegfs_sync
    ids:
      - beegfs_sync
    package_name: beegfs-sync
    file_name_template: "beegfs-sync-{{ .Version }}-{{ .Os }}.{{ .Arch }}"
    vendor: "ThinkparQ GmbH"
    homepage: https://www.beegfs.io
    maintainer: BeeGFS Maintainers <packages@beegfs.com>
    description: BeeGFS Sync (Remote Storage Targets Syncer)
    license: BeeGFS EULA
    formats:
      - rpm
      - deb
    epoch: "20"
    bindir: /opt/beegfs/sbin/
    contents:
      - src: /opt/beegfs/sbin/beegfs-sync
        dst: /usr/sbin/beegfs-sync
        type: "symlink"
      - src: rst/sync/build/beegfs-sync.service
        dst: /usr/lib/systemd/system/beegfs-sync.service
        type: config
      - src: rst/sync/build/beegfs-sync.toml
        dst: /etc/beegfs/beegfs-sync.toml
        type: config
      - src: rst/sync/NOTICE.md
        dst: /usr/share/doc/beegfs-sync/NOTICE.md
      - src: LICENSE.md
        dst: /usr/share/doc/beegfs-sync/LICENSE.md
  - id: beegfs_watch
    ids:
      - beegfs_watch
    package_name: beegfs-watch
    file_name_template: "beegfs-watch-{{ .Version }}-{{ .Os }}.{{ .Arch }}"
    vendor: "ThinkparQ GmbH"
    homepage: https://www.beegfs.io
    maintainer: BeeGFS Maintainers <packages@beegfs.com>
    description: BeeGFS Watch
    license: BeeGFS EULA
    formats:
      - rpm
      - deb
    epoch: "20"
    bindir: /opt/beegfs/sbin/
    contents:
      - src: /opt/beegfs/sbin/beegfs-watch
        dst: /usr/sbin/beegfs-watch
        type: "symlink"
      - src: watch/build/beegfs-watch.service
        dst: /usr/lib/systemd/system/beegfs-watch.service
        type: config
      - src: watch/build/beegfs-watch.toml
        dst: /etc/beegfs/beegfs-watch.toml
        type: config
      - src: watch/NOTICE.md
        dst: /usr/share/doc/beegfs-watch/NOTICE.md
      - src: LICENSE.md
        dst: /usr/share/doc/beegfs-watch/LICENSE.md

# TODO (https://github.com/ThinkParQ/bee-watch/issues/31): Add support for building multi-platform
# (amd64+arm64) images using GitHub Actions.
dockers:
  - image_templates: ["ghcr.io/thinkparq/beegfs-watch:{{ .Version }}"]
    dockerfile: watch/Dockerfile
    build_flag_templates:
      - --label=org.opencontainers.image.title="beegfs-watch"
      - --label=org.opencontainers.image.description="BeeGFS file system modification event watcher"
      - --label=org.opencontainers.image.url=https://github.com/ThinkParQ/beegfs-go/pkgs/container/beegfs-watch
      - --label=org.opencontainers.image.source=https://github.com/thinkparq/beegfs-go
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=Proprietary

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

signs:
  - artifacts: checksum
    cmd: gpg2
    args:
      - "--batch"
      - "-u"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
