# .github/workflows/release.yml
name: goreleaser

on:
  push:
    # Releases including packages and other artifacts should only be built for BeeGFS releases.
    # Tagging a release of the Go module should not trigger the release workflow.
    tags:
      - "v8.*"

permissions:
  # Required to publish releases.
  contents: write
  # Required to push Docker images to ghcr.io.
  packages: write
  # issues: write
  # id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Log into the GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PUBLICREPO_GPGPACKAGEKEY }}
          passphrase: ${{ secrets.PUBLICREPO_GPGPACKAGEPASSPHRASE }}
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1
      - name: Configure git
        # Make sure the runner has access to the internal repos repo using an access token
        # This must be after the step to setup Go which also installs git.
        run: git config --global url."https://${{ secrets.CI_PROTOBUF_ACCESS }}@github.com/thinkparq".insteadOf https://github.com/thinkparq
        # The way GoReleaser gets the previous changelog tag does not work consistently if we are
        # pushing different tags to version the Go module API versus the built BeeGFS binaries. This
        # approach ensures the tag that triggered the workflow is used as the current version, and
        # sets the previous tag based on the most recent semantic version before the current tag.
        # Ref: https://goreleaser.com/cookbooks/set-a-custom-git-tag/
      - name: Get current and previous tags
        id: tags
        run: |
          git fetch --tags
          echo "GORELEASER_CURRENT_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          previous_tag=$(git tag -l --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+\.[0-9]+)?$' | grep -v "${{ github.ref_name }}" | head -n 1)
          echo "GORELEASER_PREVIOUS_TAG=${previous_tag}" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # goreleaser version ('latest', 'nightly', or a semver)
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GOPRIVATE: github.com/thinkparq/*
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
